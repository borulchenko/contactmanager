{"version":3,"sources":["components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Contact","state","showInfo","onShowInfo","e","_this","setState","onDeleteContact","id","props","deleteContact","_this$props$contact","this","contact","name","phone","react_default","a","createElement","className","onClick","style","cursor","bind","float","color","react_router_dom","to","concat","marginRight","Component","connect","_ref5","Object","asyncToGenerator","regenerator_default","mark","_callee5","dispatch","wrap","_context5","prev","next","Axios","delete","type","payload","stop","_x5","apply","arguments","Contacts","getContacts","contacts","Fragment","map","contacts_Contact","key","_ref","_callee","res","_context","get","sent","data","_x","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","preventDefault","_this$state","newContact","addContact","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","_ref3","_callee3","_context3","post","_x3","EditContact","updateContact","match","params","nextProps","nextState","_nextProps$contact","getContact","_ref2","_callee2","_context2","_x2","_ref4","_callee4","_context4","put","_x4","Header","branding","About","NotFound","initialState","combineReducers","length","undefined","action","objectSpread","toConsumableArray","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","layout_Header","react_router","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.864f83aa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../actions/contactActions\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showInfo: false\r\n  };\r\n\r\n  onShowInfo = e => {\r\n    this.setState({ showInfo: !this.state.showInfo });\r\n  };\r\n\r\n  onDeleteContact = id => {\r\n    this.props.deleteContact(id);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, phone } = this.props.contact;\r\n    const { showInfo } = this.state;\r\n\r\n    return (\r\n      <div className=\"card card-body mb-3\">\r\n        <h3>\r\n          Name: {name}{\" \"}\r\n          <i\r\n            onClick={this.onShowInfo}\r\n            className=\"fas fa-sort-down\"\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n          <i\r\n            onClick={this.onDeleteContact.bind(this, id)}\r\n            className=\"fas fa-times\"\r\n            style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n          />\r\n          <Link to={`contact/edit/${id}`}>\r\n            <i\r\n              className=\"fas fa-pencil-alt\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                float: \"right\",\r\n                color: \"black\",\r\n                marginRight: \"1rem\"\r\n              }}\r\n            />\r\n          </Link>\r\n        </h3>\r\n        {showInfo ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Phone: {phone}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteContact }\r\n)(Contact);\r\n","import {\r\n  GET_CONTACTS,\r\n  GET_CONTACT,\r\n  ADD_CONTACT,\r\n  UPDATE_CONTACT,\r\n  DELETE_CONTACT\r\n} from \"./types\";\r\nimport Axios from \"axios\";\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  const res = await Axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n  dispatch({\r\n    type: GET_CONTACTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getContact = id => async dispatch => {\r\n  const res = await Axios.get(\r\n    `https://jsonplaceholder.typicode.com/users/${id}`\r\n  );\r\n\r\n  dispatch({\r\n    type: GET_CONTACT,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const addContact = contact => async dispatch => {\r\n  const res = await Axios.post(\r\n    \"https://jsonplaceholder.typicode.com/users\",\r\n    contact\r\n  );\r\n\r\n  dispatch({\r\n    type: ADD_CONTACT,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const updateContact = contact => async dispatch => {\r\n  const res = await Axios.put(\r\n    `https://jsonplaceholder.typicode.com/users/${contact.id}`,\r\n    contact\r\n  );\r\n\r\n  dispatch({\r\n    type: UPDATE_CONTACT,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n  dispatch({\r\n    type: DELETE_CONTACT,\r\n    payload: id\r\n  });\r\n};\r\n","export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const GET_CONTACT = \"GET_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getContacts } from \"../../actions/contactActions\";\r\n\r\nclass Contacts extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"display-for mb-2\">Contact list</h1>\r\n        {contacts.map(contact => (\r\n          <Contact key={contact.id} contact={contact} />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  getContacts: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contact.contacts\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getContacts }\r\n)(Contacts);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = props => {\r\n  const { label, name, value, placeholder, type, onChange, error } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}:</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../actions/contactActions\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    phone: \"\",\r\n    errors: { name: \"\", phone: \"\" }\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      phone\r\n    };\r\n\r\n    this.props.addContact(newContact);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, phone, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Add Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n            />\r\n\r\n            <TextInputGroup\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Enter phone\"\r\n              value={phone}\r\n              onChange={this.onChange}\r\n              error={errors.phone}\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Add Conctact\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  addContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addContact }\r\n)(AddContact);\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getContact, updateContact } from \"../../actions/contactActions\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    phone: \"\",\r\n    errors: { name: \"\", phone: \"\" }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    const { name, phone } = nextProps.contact;\r\n    this.setState({ name, phone });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getContact(id);\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const updateContact = {\r\n      id,\r\n      name,\r\n      phone\r\n    };\r\n\r\n    this.props.updateContact(updateContact);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      phone: \"\",\r\n      errors: { name: \"\", phone: \"\" }\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, phone, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Edit Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n            />\r\n\r\n            <TextInputGroup\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Enter phone\"\r\n              value={phone}\r\n              onChange={this.onChange}\r\n              error={errors.phone}\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Conctact\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  getContact: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contact: state.contact.contact\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getContact, updateContact }\r\n)(EditContact);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-sm navbar-dark \r\n                    bg-info mb-3 py-0\"\r\n    >\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n      </div>\r\n\r\n      <div>\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\" /> Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\" />\r\n              Add\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\" />\r\n              About\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About contact manager.</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404 Page Not Found</span>\r\n      </h1>\r\n      <p className=\"lead\">Sorry, this page does not exist.</p>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  GET_CONTACTS,\r\n  GET_CONTACT,\r\n  ADD_CONTACT,\r\n  UPDATE_CONTACT,\r\n  DELETE_CONTACT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  contact: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      };\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contact: action.payload\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nexport default combineReducers({\r\n  contact: contactReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport AddContact from \"./components/contacts/AddContact\";\r\nimport EditContact from \"./components/contacts/EditContact\";\r\nimport Header from \"./components/layout/Header\";\r\nimport About from \"./components/pages/About\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div>\r\n            <Header branding=\"Contact Manager\" />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route exact path=\"/contact/add\" component={AddContact} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}